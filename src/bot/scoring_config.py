from models import RiskLevel, ScoringWeight, RiskScoring

SCORING_CONFIG = [
    RiskScoring(
        level=RiskLevel.CRITICAL,
        weights={
            "airdrop_scam": ScoringWeight(birdeye=-.5, goplus=-.3),
            "fake_token": ScoringWeight(birdeye=-.5, goplus=-.3),
            "honeypot": ScoringWeight(birdeye=-.5, goplus=-.3),
            "owner_can_change_balance": ScoringWeight(birdeye=-.5, goplus=-.3),
            "ownership_renounced": ScoringWeight(birdeye=-.5, goplus=-.3),
            "self_destruct": ScoringWeight(birdeye=-.5, goplus=-.3),
        },
    ),
    RiskScoring(
        level=RiskLevel.HIGH,
        weights={
            "assigned_address'_slippage_is_modifiable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "cannot_be_bought": ScoringWeight(birdeye=-.3, goplus=-.2),
            "cannot_sell_all": ScoringWeight(birdeye=-.3, goplus=-.2),
            "dex_info": ScoringWeight(birdeye=-.2, goplus=-.1),
            "mintable": ScoringWeight(birdeye=-.2, goplus=-.2),
            "modifiable_anti_whale": ScoringWeight(birdeye=-.2, goplus=-.1),
            "open_source": ScoringWeight(birdeye=-.2, goplus=-.2),
            "proxy_contract": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token_holder_number": ScoringWeight(birdeye=-.2, goplus=-.1),
            "trading_with_cooldowntime": ScoringWeight(birdeye=-.2, goplus=-.1),
            "trust_list": ScoringWeight(birdeye=-.2, goplus=-.2),
            "with_hidden_owner": ScoringWeight(birdeye=-.2, goplus=-.1),
            "blacklist": ScoringWeight(birdeye=-.2, goplus=-.1),
            "buy_tax": ScoringWeight(birdeye=-.2, goplus=-.1),
            "freezable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "gas_abuse": ScoringWeight(birdeye=-.2, goplus=-.1),
            "max_fee": ScoringWeight(birdeye=-.2, goplus=-.1),
            "other_potential_risks": ScoringWeight(birdeye=-.2, goplus=-.1),
            "sell_tax": ScoringWeight(birdeye=-.2, goplus=-.1),
            "transfer_fees": ScoringWeight(birdeye=-.2, goplus=-.1),
            "transfer_fees_enable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "extreme_fee_test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "top10_lp_token_holders_info": ScoringWeight(birdeye=-.2, goplus=-.2),
            "inadequate_liquidity_test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "inadequate_ininitial_liquidity_test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "take_back_ownership": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token_percentage_of_creator": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token_percentage_of_owner": ScoringWeight(birdeye=-.2, goplus=-.1),
            "ua_percentage": ScoringWeight(birdeye=-.2, goplus=-.1),
            "jupiter_strict_list": ScoringWeight(birdeye=-.2, goplus=-.1),
            "top_holders_percentage": ScoringWeight(birdeye=-.2, goplus=-.2),
        },
    ),
    RiskScoring(
        level=RiskLevel.MEDIUM,
        weights={
            "mutable_info": ScoringWeight(birdeye=-.1, goplus=-.1),
            "whitelist": ScoringWeight(birdeye=-.1, goplus=-.1),
            "with_external_call": ScoringWeight(birdeye=-.1, goplus=-.1),
            "liquidity_locked_or_liquidity_burned": ScoringWeight(birdeye=-.1, goplus=-.1),
            "creator_high_lp_balance_test": ScoringWeight(birdeye=-.1, goplus=-.1),
            "owner_high_lp_balance_test": ScoringWeight(birdeye=-.1, goplus=-.1),
        },
    ),
    RiskScoring(
        level=RiskLevel.LOW,
        weights={
            "anti_whale": ScoringWeight(birdeye=-.05, goplus=-.05),
            "token_total_supply": ScoringWeight(birdeye=-.05, goplus=-.05),
            "note": ScoringWeight(birdeye=-.05, goplus=-.05),
            "fee_withdrawer": ScoringWeight(birdeye=-.05, goplus=-.05),
            "freeze_authority": ScoringWeight(birdeye=-.05, goplus=-.05),
            "transfer_fee_config_authority": ScoringWeight(birdeye=-.05, goplus=-.05),
            "liquidity_burned": ScoringWeight(birdeye=-.05, goplus=-.05),
            "liquidity_locked": ScoringWeight(birdeye=-.05, goplus=-.05),
            "lp_holders_count": ScoringWeight(birdeye=-.05, goplus=-.05),
            "lp_token_total_supply": ScoringWeight(birdeye=-.05, goplus=-.05),
            "creator_address": ScoringWeight(birdeye=-.05, goplus=-.05),
            "creator_balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "first_mint_time": ScoringWeight(birdeye=-.05, goplus=-.05),
            "first_mint_tx": ScoringWeight(birdeye=-.05, goplus=-.05),
            "owner_address": ScoringWeight(birdeye=-.05, goplus=-.05),
            "owner_balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "ua_balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "update_authority_(ua)": ScoringWeight(birdeye=-.05, goplus=-.05),
        },
    ),
]
