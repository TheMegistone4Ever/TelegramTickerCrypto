from models import RiskLevel, ScoringWeight, RiskScoring

SCORING_CONFIG = [
    RiskScoring(
        level=RiskLevel.CRITICAL,
        weights={
            "airdrop scam": ScoringWeight(birdeye=-.5, goplus=-.3),
            "fake token": ScoringWeight(birdeye=-.5, goplus=-.3),
            "honeypot": ScoringWeight(birdeye=-.5, goplus=-.3),
            "owner can change balance": ScoringWeight(birdeye=-.5, goplus=-.3),
            "ownership renounced": ScoringWeight(birdeye=-.5, goplus=-.3),
            "self destruct": ScoringWeight(birdeye=-.5, goplus=-.3),
        },
    ),
    RiskScoring(
        level=RiskLevel.HIGH,
        weights={
            "assigned address' slippage is modifiable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "cannot be bought": ScoringWeight(birdeye=-.3, goplus=-.2),
            "cannot sell all": ScoringWeight(birdeye=-.3, goplus=-.2),
            "dex info": ScoringWeight(birdeye=-.2, goplus=-.1),
            "mintable": ScoringWeight(birdeye=-.2, goplus=-.2),
            "modifiable anti whale": ScoringWeight(birdeye=-.2, goplus=-.1),
            "open source": ScoringWeight(birdeye=-.2, goplus=-.2),
            "proxy contract": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token holder number": ScoringWeight(birdeye=-.2, goplus=-.1),
            "trading with cooldowntime": ScoringWeight(birdeye=-.2, goplus=-.1),
            "trust list": ScoringWeight(birdeye=-.2, goplus=-.2),
            "with hidden owner": ScoringWeight(birdeye=-.2, goplus=-.1),
            "blacklist": ScoringWeight(birdeye=-.2, goplus=-.1),
            "buy tax": ScoringWeight(birdeye=-.2, goplus=-.1),
            "freezable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "gas abuse": ScoringWeight(birdeye=-.2, goplus=-.1),
            "max fee": ScoringWeight(birdeye=-.2, goplus=-.1),
            "other potential risks": ScoringWeight(birdeye=-.2, goplus=-.1),
            "sell tax": ScoringWeight(birdeye=-.2, goplus=-.1),
            "transfer fees": ScoringWeight(birdeye=-.2, goplus=-.1),
            "transfer fees enable": ScoringWeight(birdeye=-.2, goplus=-.1),
            "extreme fee test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "top10 lp token holders info": ScoringWeight(birdeye=-.2, goplus=-.2),
            "inadequate liquidity test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "inadequate ininitial liquidity test": ScoringWeight(birdeye=-.2, goplus=-.1),
            "take back ownership": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token percentage of creator": ScoringWeight(birdeye=-.2, goplus=-.1),
            "token percentage of owner": ScoringWeight(birdeye=-.2, goplus=-.1),
            "ua percentage": ScoringWeight(birdeye=-.2, goplus=-.1),
            "jupiter strict list": ScoringWeight(birdeye=-.2, goplus=-.1),
            "top holders percentage": ScoringWeight(birdeye=-.2, goplus=-.2),
        },
    ),
    RiskScoring(
        level=RiskLevel.MEDIUM,
        weights={
            "mutable info": ScoringWeight(birdeye=-.1, goplus=-.1),
            "whitelist": ScoringWeight(birdeye=-.1, goplus=-.1),
            "with external call": ScoringWeight(birdeye=-.1, goplus=-.1),
            "liquidity locked or liquidity burned": ScoringWeight(birdeye=-.1, goplus=-.1),
            "creator high lp balance test": ScoringWeight(birdeye=-.1, goplus=-.1),
            "owner high lp balance test": ScoringWeight(birdeye=-.1, goplus=-.1),
        },
    ),
    RiskScoring(
        level=RiskLevel.LOW,
        weights={
            "anti whale": ScoringWeight(birdeye=-.05, goplus=-.05),
            "token total supply": ScoringWeight(birdeye=-.05, goplus=-.05),
            "note": ScoringWeight(birdeye=-.05, goplus=-.05),
            "fee withdrawer": ScoringWeight(birdeye=-.05, goplus=-.05),
            "freeze authority": ScoringWeight(birdeye=-.05, goplus=-.05),
            "transfer fee config authority": ScoringWeight(birdeye=-.05, goplus=-.05),
            "liquidity burned": ScoringWeight(birdeye=-.05, goplus=-.05),
            "liquidity locked": ScoringWeight(birdeye=-.05, goplus=-.05),
            "lp holders count": ScoringWeight(birdeye=-.05, goplus=-.05),
            "lp token total supply": ScoringWeight(birdeye=-.05, goplus=-.05),
            "creator address": ScoringWeight(birdeye=-.05, goplus=-.05),
            "creator balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "first mint time": ScoringWeight(birdeye=-.05, goplus=-.05),
            "first mint tx": ScoringWeight(birdeye=-.05, goplus=-.05),
            "owner address": ScoringWeight(birdeye=-.05, goplus=-.05),
            "owner balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "ua balance": ScoringWeight(birdeye=-.05, goplus=-.05),
            "update authority (ua)": ScoringWeight(birdeye=-.05, goplus=-.05),
        },
    ),
]
